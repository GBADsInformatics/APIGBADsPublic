AWSTemplateFormatVersion: 2010-09-09
Parameters:
  ApplicationName:
    Type: String
  DockerURI:
    Type: String
  BaseURL:
    Type: String
  RdsPublicHost:
    Type: String
  RdsPublicName:
    Type: String
  RdsPublicUser:
    Type: String
  RdsPublicPass:
    Type: String
  S3USERKEY:
    Type: String
  S3USERSECRET:
    Type: String
  S3USERREGION:
    Type: String
  ListenerRulePriority:
    Type: Number
  CPU:
    Type: String
    Default: '256'
  Memory:
    Type: String
    Default: '512'
Resources:
  ECSTask:
    Type: 'AWS::ECS::TaskDefinition'
    Properties:
      Family: !Sub '${ApplicationName}-task'
      NetworkMode: awsvpc
      RequiresCompatibilities:
        - FARGATE
      Cpu: !Ref CPU
      Memory: !Ref Memory
      ExecutionRoleArn: 'arn:aws:iam::068606542379:role/ecsTaskExecutionRole'
      ContainerDefinitions:
        - Name: !Sub '${ApplicationName}-container'
          Image: !Ref DockerURI
          PortMappings:
            - ContainerPort: 80
          Environment:
            - Name: ENV
              Value: 'PROD'
            - Name: RDS_HOST
              Value: !Ref RdsPublicHost
            - Name: RDS_NAME
              Value: !Ref RdsPublicName
            - Name: RDS_USER
              Value: !Ref RdsPublicUser
            - Name: RDS_PASS
              Value: !Ref RdsPublicPass
            - Name: S3_USER_ACCESS_KEY_ID
              Value: !Ref S3USERKEY
            - Name: S3_USER_SECRET_ACCESS_KEY
              Value: !Ref S3USERSECRET
            - Name: S3_USER_REGION
              Value: !Ref S3USERREGION
            - Name: BASE_URL
              Value: !Ref BaseURL
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group: !Ref CloudWatchLogGroup
              awslogs-region: us-east-2
              awslogs-stream-prefix: ecs
  ECSService:
    Type: 'AWS::ECS::Service'
    Properties:
      Cluster: 'arn:aws:ecs:us-east-2:068606542379:cluster/GBADs-Dashboards-Cluster'
      ServiceName: !Sub '${ApplicationName}-service'
      TaskDefinition: !Ref ECSTask
      LaunchType: FARGATE
      DesiredCount: 1
      LoadBalancers:
        - ContainerName: !Sub '${ApplicationName}-container'
          ContainerPort: 80
          LoadBalancerName: !Ref 'AWS::NoValue'
          TargetGroupArn: !Ref LoadBalancerTargetGroup
      NetworkConfiguration:
        AwsvpcConfiguration:
          SecurityGroups:
            - sg-04937cd603287af40
          Subnets:
            - subnet-0fc75f13ac0ec9730
            - subnet-08c6dc9be192d3a1a
            - subnet-00951f5f6df7d9eb3
    DependsOn: LoadBalancerListenerRule
  LoadBalancerTargetGroup:
    Type: 'AWS::ElasticLoadBalancingV2::TargetGroup'
    Properties:
      Name: !Sub '${ApplicationName}-target'
      Protocol: HTTP
      TargetType: ip
      Port: 80
      VpcId: vpc-ce95f0a5
      HealthCheckProtocol: HTTP
      HealthCheckPort: traffic-port
      HealthCheckPath: !Sub '${BaseURL}/'
      HealthCheckIntervalSeconds: 30
      HealthCheckTimeoutSeconds: 5
      HealthyThresholdCount: 2
      UnhealthyThresholdCount: 2
      Matcher:
        HttpCode: "200-302"
  LoadBalancerListenerRule:
    Type: 'AWS::ElasticLoadBalancingV2::ListenerRule'
    Properties:
      ListenerArn: >-
        arn:aws:elasticloadbalancing:us-east-2:068606542379:listener/app/Dashboards-ALB/20d038e288e2913e/d484f60878742047
      Priority: !Ref ListenerRulePriority
      Conditions:
        - Field: path-pattern
          Values:
            - !Sub '${BaseURL}*'
      Actions:
        - Type: forward
          TargetGroupArn: !Ref LoadBalancerTargetGroup
  CloudWatchLogGroup:
    Type: 'AWS::Logs::LogGroup'
    Properties:
      LogGroupName: !Sub '/ecs/${ApplicationName}-logs'
      RetentionInDays: 5



